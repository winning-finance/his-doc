(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{395:function(t,a,e){"use strict";e.r(a);var s=e(59),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"组件的规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件的规范"}},[t._v("#")]),t._v(" 组件的规范")]),t._v(" "),e("p",[t._v("为了组件的调用以及参数解析的统一，特制定组件的统一规范")]),t._v(" "),e("h3",{attrs:{id:"组件的数据类型规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件的数据类型规范"}},[t._v("#")]),t._v(" 组件的数据类型规范")]),t._v(" "),e("p",[t._v("该规范基本参考winning后台的数据规范。返回数据要求是一个对象，需要包含以下几个属性")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("success")]),t._v(":"),e("code",[t._v("boolean类型")]),t._v("。用于标识组件的运行是否成功。原则上，在以"),e("code",[t._v("promise")]),t._v("方式调用的方法组件里，"),e("code",[t._v("then")]),t._v("方法的"),e("code",[t._v("success")]),t._v("为"),e("code",[t._v("true")]),t._v(","),e("code",[t._v("catch")]),t._v("方法里为"),e("code",[t._v("false")])]),t._v(" "),e("li",[e("code",[t._v("data")]),t._v(":"),e("code",[t._v("any类型")]),t._v("。组件需要返回的数据")]),t._v(" "),e("li",[e("code",[t._v("errorDetail")]),t._v(":"),e("code",[t._v("Error类型 或者是 后端的errorDetail对象")]),t._v("。组件返回的错误数据，")]),t._v(" "),e("li",[e("code",[t._v("cancel")]),t._v(":"),e("code",[t._v("boolean类型")]),t._v("。当组件中途取消的时候，该字段将为"),e("code",[t._v("true")]),t._v("。在以"),e("code",[t._v("promise")]),t._v("方式调用的方法组件里，将会通过"),e("code",[t._v("then")]),t._v("方法返回")])]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("success")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("data")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("errorDetail")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("cancel")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"消息提示规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#消息提示规范"}},[t._v("#")]),t._v(" 消息提示规范")]),t._v(" "),e("p",[t._v("各组件在运行中，组件可以自行弹出对应的消息提示或者错误信息。但是，"),e("strong",[t._v("在组件运行完成或者异常，将要回调到上层时，组件不允许弹出任何消息，由调用者来进行消息的提示")])]),t._v(" "),e("h3",{attrs:{id:"普通组件事件规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#普通组件事件规范"}},[t._v("#")]),t._v(" 普通组件事件规范")]),t._v(" "),e("p",[t._v("事件名称请使用kebab-casem(即短横线)命名的方式。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    this.$emit('on-change')\n    <test-element @on-change=\"change\"/>\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);